// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBD3.Data;

#nullable disable

namespace NBD3.Data.NBDMigrations
{
    [DbContext(typeof(NBDContext))]
    [Migration("20240401044001_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("NBD3.Models.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BidAmount")
                        .HasColumnType("REAL");

                    b.Property<bool>("BidApprove")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BidApproveClient")
                        .HasColumnType("INTEGER");

                    b.Property<double>("BidCost")
                        .HasColumnType("REAL");

                    b.Property<DateOnly>("BidDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("BidNoteReason")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("BidRejectedClient")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BidRejectedManager")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BidStatus")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BidId");

                    b.HasIndex("ProjectID");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("NBD3.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientCityAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientCommpanyName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientCountryAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientFirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientMiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientPostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientStreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientCommpanyName")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("NBD3.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InventoryDescription")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<double>("InventoryPriceList")
                        .HasColumnType("REAL");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryUnitType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int>("MaterialCategoryID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoryID");

                    b.HasIndex("MaterialCategoryID");

                    b.ToTable("Inventorys");
                });

            modelBuilder.Entity("NBD3.Models.Labour", b =>
                {
                    b.Property<int>("LabourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("LabourCostHour")
                        .HasColumnType("REAL");

                    b.Property<double>("LabourPriceHour")
                        .HasColumnType("REAL");

                    b.Property<string>("LabourType")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.HasKey("LabourID");

                    b.HasIndex("LabourType")
                        .IsUnique();

                    b.ToTable("Labours");
                });

            modelBuilder.Entity("NBD3.Models.LabourDetail", b =>
                {
                    b.Property<int>("LabourID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LabourDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("LabourID", "BidID");

                    b.HasIndex("BidID");

                    b.ToTable("LabourDetails");
                });

            modelBuilder.Entity("NBD3.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationCityAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationContactPer")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationCountryAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationPostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationStreetAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LocationId");

                    b.HasIndex("LocationName")
                        .IsUnique();

                    b.HasIndex("ProjectId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("NBD3.Models.MaterialCategory", b =>
                {
                    b.Property<int>("MaterialCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("MaterialCategoryID");

                    b.ToTable("MaterialCategorys");
                });

            modelBuilder.Entity("NBD3.Models.MaterialDetail", b =>
                {
                    b.Property<int>("InventoryID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoryID", "BidID");

                    b.HasIndex("BidID");

                    b.ToTable("MaterialDetails");
                });

            modelBuilder.Entity("NBD3.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ProjectApprove")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ProjectEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ProjectEndDateValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectNoteReason")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<bool>("ProjectReject")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("ProjectStartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectStatusList")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProjectName")
                        .IsUnique();

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NBD3.Models.Staff", b =>
                {
                    b.Property<int>("StaffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StaffEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffFirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffLastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("StaffTitle")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("StaffID");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("NBD3.Models.StaffDetail", b =>
                {
                    b.Property<int>("StaffID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BidID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StaffDetailId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StaffID", "BidID");

                    b.HasIndex("BidID");

                    b.ToTable("StaffDetails");
                });

            modelBuilder.Entity("NBD3.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("StatusID");

                    b.ToTable("Statuss");
                });

            modelBuilder.Entity("NBD3.Models.Track", b =>
                {
                    b.Property<int>("TrackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BidID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TrackDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.HasKey("TrackID");

                    b.HasIndex("BidID");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("NBD3.ViewModels.BidSummaryVM", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryCategory")
                        .HasColumnType("TEXT");

                    b.Property<string>("InventoryCode")
                        .HasColumnType("TEXT");

                    b.Property<double>("InventoryList")
                        .HasColumnType("REAL");

                    b.Property<string>("InventoryType")
                        .HasColumnType("TEXT");

                    b.Property<double>("MaterialCost")
                        .HasColumnType("REAL");

                    b.Property<int>("NumberOfMaterials")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectName")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalMaterial")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable((string)null);

                    b.ToView("BidMSummaries", (string)null);
                });

            modelBuilder.Entity("NBD3.Models.Bid", b =>
                {
                    b.HasOne("NBD3.Models.Project", "Project")
                        .WithMany("Bids")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("NBD3.Models.Inventory", b =>
                {
                    b.HasOne("NBD3.Models.MaterialCategory", "MaterialCategory")
                        .WithMany("Inventorys")
                        .HasForeignKey("MaterialCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialCategory");
                });

            modelBuilder.Entity("NBD3.Models.LabourDetail", b =>
                {
                    b.HasOne("NBD3.Models.Bid", "Bid")
                        .WithMany("LabourDetails")
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBD3.Models.Labour", "Labour")
                        .WithMany("LabourDetails")
                        .HasForeignKey("LabourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Labour");
                });

            modelBuilder.Entity("NBD3.Models.Location", b =>
                {
                    b.HasOne("NBD3.Models.Project", null)
                        .WithMany("Locations")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("NBD3.Models.MaterialDetail", b =>
                {
                    b.HasOne("NBD3.Models.Bid", "Bid")
                        .WithMany("MaterialDetails")
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBD3.Models.Inventory", "Inventory")
                        .WithMany("MaterialDetails")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("NBD3.Models.Project", b =>
                {
                    b.HasOne("NBD3.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBD3.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("NBD3.Models.StaffDetail", b =>
                {
                    b.HasOne("NBD3.Models.Bid", "Bid")
                        .WithMany("StaffDetails")
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBD3.Models.Staff", "Staff")
                        .WithMany("StaffDetails")
                        .HasForeignKey("StaffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NBD3.Models.Track", b =>
                {
                    b.HasOne("NBD3.Models.Bid", "Bid")
                        .WithMany("Tracks")
                        .HasForeignKey("BidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("NBD3.Models.Bid", b =>
                {
                    b.Navigation("LabourDetails");

                    b.Navigation("MaterialDetails");

                    b.Navigation("StaffDetails");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("NBD3.Models.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("NBD3.Models.Inventory", b =>
                {
                    b.Navigation("MaterialDetails");
                });

            modelBuilder.Entity("NBD3.Models.Labour", b =>
                {
                    b.Navigation("LabourDetails");
                });

            modelBuilder.Entity("NBD3.Models.MaterialCategory", b =>
                {
                    b.Navigation("Inventorys");
                });

            modelBuilder.Entity("NBD3.Models.Project", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("NBD3.Models.Staff", b =>
                {
                    b.Navigation("StaffDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
