@model PaginatedList<NBD3.Models.Bid>
@{
    ViewData["Title"] = "Bids";
}

<div class="mt-4 mb-4">
    <h1>Bid Management</h1>
</div>

<div class="container mt-3">
    <div class="row justify-content-end">
        <div class="col-auto mb-2">
            <a asp-action="Create" class="btn btn-xs btn-outline-secondary" role="button" data-bs-toggle="tooltip" data-bs-placement="top" title="Create">Create New</a>
        </div>
        <div class="col-0"></div>
    </div>
</div>

<form asp-action="Index" asp-controller="Bid" method="get">
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />

    <div class="row">
        <div class="col-md-6">
            <button class="btn btn-primary" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                Filter/Search
            </button>
        </div>
    </div>

    <div class="row collapse" id="collapseFilter">
        <div class="col-md-6">
            <label for="projectFilter">Project Name:</label>
            <input type="text" id="projectFilter" name="projectFilter" class="form-control" value="@ViewData["projectFilter"]" placeholder="Enter project name..." />
        </div>

        <div class="col-md-12 mt-2">
            <button type="submit" class="btn btn-primary">Filter</button>
            <button type="button" class="btn btn-secondary ml-2" onclick="clearFilters()">Clear Filters</button>
        </div>
    </div>
</form>

    <table class="table">
        <thead >
            <tr class="table-dark">
                <th>
                    <a asp-action="Index" asp-route-sortField="ProjectName" asp-route-sortDirection="@(GetSortDirection("ProjectName"))">Project Name</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortField="BidDate" asp-route-sortDirection="@(GetSortDirection("BidDate"))">Bid Date</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortField="BidAmount" asp-route-sortDirection="@(GetSortDirection("BidAmount"))">Bid Amount</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortField="BidApprove" asp-route-sortDirection="@(GetSortDirection("BidApprove"))">Bid Approve</a>
                </th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr class="table-dark">
                <td>@Html.DisplayFor(modelItem => item.Project.ProjectName)</td>
                    <td>@Html.DisplayFor(modelItem => item.BidDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.BidAmount)</td>
                    <td>@Html.DisplayFor(modelItem => item.BidApprove)</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.BidId" class="btn btn-xs btn-outline-primary">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.BidId" class="btn btn-xs btn-outline-primary">Delete</a>
                        <a asp-action="Edit" asp-route-id="@item.BidId" class="btn btn-xs btn-outline-primary" role="button" data-bs-toggle="tooltip" data-bs-placement="top" title="Edit" style="font-size: 14px;">Approve/Reject</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

@{
    string GetSortDirection(string fieldName)
    {
        if (ViewData["sortField"] == null || ViewData["sortField"].ToString() != fieldName)
        {
            return "asc";
        }

        return ViewData["sortDirection"].ToString() == "asc" ? "desc" : "asc";
    }
}
<div class="fixed-pagination d-flex justify-content-center mt-4">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link" aria-label="First" asp-action="Index" asp-route-page="1">First</a>
            </li>
            <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                <a class="page-link" aria-label="Previous" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)">Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" aria-label="Next" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)">Next</a>
            </li>
            <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" aria-label="Last" asp-action="Index" asp-route-page="@Model.TotalPages">Last</a>
            </li>
        </ul>
    </nav>
</div>